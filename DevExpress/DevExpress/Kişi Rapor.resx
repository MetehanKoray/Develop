<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="simpleButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        UDrmo76+/wFNYAh10gXmOQAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="simpleButton2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAACixJREFUaEPt
        mXtQlNcZxq1pWk2CCt4QnWTsaG3itGMabyB3RI2xttaa1BprTYrVNG0M0caEGEUgMdM6tRpNvOENuSy7
        7MIurIrKTUGichPkDmJtMlPHe81oNL59nm/P1oVluSjYf3xnnpnl+855n9/7nvOd/YAej+JRPIquiaEx
        5qehcCgROgndgkSJn3mN9zjmaTXt/xsA8YAiobJRf7XKtNhcWWA4IX/OKJXI3CqJzqvRxM+8xnscw7Gc
        o+Z6qHQPL4ZGp/WGIqArM3blylLAETQmv14+Pt4InZW1hU3NxGu8xzEcyzmcyxwqV2+VvnsDRjOhr6bF
        5siKzAqJOVangUXmN8kbWY3y6sF6mWWtk8nmWglJs4mfeY33OIZjtWIwlzmYizmZW9l0fXhFpz0GrfPe
        lClhxlMSfbRWovIbJOxwvfwiHZAADTXXS6gFSm9oXbyHMRzLOZzLHMzFnMwNj/X0UrZdE15Rad+DUkK3
        ZcmqrEqJPlYviw/XydS0GnS37h50RqNMyTh7T9YmmxyucYy9GM5lDuZizsjsSqEHveip7B88vKJSd05B
        4ujcagk/UiPTzVXattDAMwBjBbgVgPsB2xFhLOdoc7VCarWczE0PetFT2T9YeK1JDQ/ZckSicqpk4YEq
        CUlV8OmAt4N3Bt4uNU8rBLm0Zwa5f7e/SvOiJ7yXK4z7iyFrUqdBd97JKJNXLGckxFRpg7+frruSvQjk
        1IqAB72WWcuE3tBLCqdzMSTS9BR0fmFyocyzlEuI8Yxz51vAvGhtcLrWIbVcCXjR8zV9oZCBLAqr44FJ
        0VO3Z0mYFfCGcpwc2JvYr1NgNBWGU2HsqPDETNm0a6/MslQ73euQ2BA2hs8EvOgZZj0tZADLxwqrYzFk
        tckDur7YXCwhyaUyGcsaaqnDKdLgBP8Suh65J0WKi4vlxo0bMt8CU4f7nRKL0B5sfI/Ak95LzEVCFjIp
        vPbDc7VxeejWwzJNV3Sv+1jelt2fbamU9XuSpKmpSeyx2lIgi/VHW9Urae0UZ18FbiW1CmQgC5kUXvvh
        ucpY8cuE4xKkK5bJ2I+h2Jctuz/fVCS7EpPl0qVLCt0WJSUlkpub26oMBoP8LTZOfp1a1hzcUfZVgCe9
        yUAWMim8tsPzQ+OIkR+ZJTj+hATpy7SjTTvv2RkYUDMy6kSffkBu3rypsDsely9flhSjSd5OPARg54OA
        0h5oeNKbDGQhE9kUpusY/GHKknH/OCABCSclWH9aW0qeDi1PnQU556Xp+jcKq3Nx9+5dKSoqkmUJB5vl
        /J/gpZ1I8CYDWchENoXpOgavTNkydtNhCUwskuCUCiSp0c7o1o7NmZnnpPDfXyssW+garsr68ovNtKHi
        ohw4/x/5+s5dNcoWpaWlMje11CmvVgA86U0GspCJbArTdQxeacge+3m2BCagAAML4NmPAhzfbVoosf6q
        QhJZhBe01sZQ87PPS8O15qu2Ie2I81i+M8GT3mQgC5nIpjBdx6APDBUTtuWqFcCXVwcKoGJKLkjVlVvy
        c6vrAqjXc/4p3zosxNmmczJdW2GHcY4FgIEsZCKbwnQdgyIMTRN35EkAJgVhsvY+z7dHJkXyrlDFpXsP
        P5+HOeaK5mPgRU96k4EsZCKbwnQdgyL0tgKwbEFYvpBUvDJ3cQGWqi8Vvi1etbgoAN5kIIutAH37BQx8
        X1/G/eYff0oCk8sl2FQjIfwlJB1JM5q6RIXVjQrdFrPT0STHMfCiJ73JQBYykU1hug4Mso7ZeEj8953E
        5NNIgm/EtK4rICz5mFy9eu+hv/bNt7aOO45jAfCkNxnIQiayKUzXMfC95I3PrbOK397jEpBUou3BYOzF
        ED5U6Y0woNn96Y2kbDmck6vQbZFYc7H5OHjQi57a/gcDWchENoXpOgasSP7N8OhUmbSrQPyx9wL1FRKE
        pQzGkoZYmBzdaUMr4tJl7c4EJ32+ZasUFBTI7du3FbrIlVt35Gf41m2WAx70oie9yUAWMpFNYbqOASt0
        noMjksUnNk/8sHQButMSZKyS4NQ6CbbgwWqnCEtxtVy4cMFJPG0c4zbO0vD8L5vPJzw86EVPepOBLJ4R
        ehSgG6ow244B7+ryx2w4qFXuhw4EoBOBxmoJSkMRZhhoRq0ru/ZfCtF1VF6+KQuyzjvPR2560Iue9CYD
        Wcik8NqP/u/qXh8eZRIfHF2+cSfEP6lMAlMqsazYlzwd2iiirQKq8UW3+Qz2PPa501zCa1unVvOiJ73J
        QBYyKbz2o/9fknpDXz2/MVN8dhaI774i8deVS4ChSgJN6BBOiKA0GjZ2jZCLOZmbHvSiJ73JQBYyKbyO
        BSa8NXyNSSZszRGf3YUyaV+x+OnwUBmwvEYYpcIwlcaNDybkYC7mZG560Iue9CYDWRRWx8NjedJjUPGo
        tWaZuD1XS+gbzyLwxYIuBRhrYIzV0AqBtC52QmoeczAXczI3PehFT3qTgSwKq3PhsTzxx9D10esy8DKV
        J967v9C645tULn7J2KcpMDbWSgCX3gQYSutoG7KPwxzOZQ7mYk7mpge96ElvMiic+wuPZYkzh63Uy/M4
        CbQidmI7xRWJbwKOuCScFMnYswYUkoJCuLU0AbBV2e5zLOdwLnMwF3MyNz3oRU96K4wHCySKeGaVQcas
        3y/jsS8nxuaL9x6cz+jYpMTTWvd8dWfETw8g7mPCUewuZf+Z9zCGY7WOYy5zMBdzMjc96EVPZd814f5O
        wgqv93Xy7CdmGfdZlozfdlQm7DwuE3efFO847Nt9peLDTiYCDF2dBMhm4jXc4xiO5RzOZQ7mYk7mpge9
        lG3XBhJPg66PiDbhV7xDMg5viOO3H1OFnJCJe06J915shX0lmrSiCKt+5j2O4VgNHHOZg7mYk7npoey6
        J9zf2jvaPTz+qLYaa9PkhU8zZSy6N25LjoxDJ8fvwFaILZAJsccBiT1N4TOv8R7HcCzncC5zaF0PT8hj
        bmXTrdETerzfki1z3JfGVQ2N0MkPY0wy5u9WWzH45ZtwYz9DZ9ldip95Dfc4hmM5h3Pd346v7PfHHbOR
        k0fld2jQnUEDFvB9qE/PpzyGuc354M2+izbtd1+699qQ95LkGZweI6JSZCS2xGjsaYqfeY33OAZjr/b9
        w+YMt7lrFvfsO3Awcj0BPQ49lALYKX6t82+Vw6EXoBBoVi/vX619Yvqb8QDLc5sX80WfRZvPUW7zPip0
        mxuV++T0P8X18nk5BmNnQH4Qt4wX1Afif2TYnG4NewFcgb4QX28J4QNNhWZBc6HfQq9BYdDvoYXQfOhl
        iGd7MDQWGgkNgp6EuALdXgBDewYgmvaH+E/rZ6GfQt6QP0TAUGiK0mQoCPKFxkM/gfhnQnafjegFPZRn
        gGFfBS45i+BW8oRYyA8gdvVH0HMOYoGjIEJz2w2D2HnCczvau/9QCmDYi6Axu8dCuI/7QSyIKzOghXjN
        HeIYN4gPLrfid6H7hO/R478Y2zi4GHIpXQAAAABJRU5ErkJggg==
</value>
  </data>
</root>